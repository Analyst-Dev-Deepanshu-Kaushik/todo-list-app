/* ========== THEME SETUP ========== */
/* Defines custom properties (CSS variables) for light and dark modes. Makes switching between themes smooth and maintainable. */
:root {
    --bg: #ffffff;
    --text: #333;
    --card: #f5f5f5;
    --accent: #555;
    --btn-bg: #666;
    --completed: #e2e2e2;
    --cancelled: #f0dada;
    --hover-accent: #444;
    --hover-btn-bg: #555;
}

body.dark {
    --bg: #1a1a1a;
    --text: #e0e0e0;
    --card: #2a2a2a;
    --accent: #888;
    --btn-bg: #a84444;
    --completed: #3a3a3a;
    --cancelled: #4a3a3a;
    --hover-accent: #999;
    --hover-btn-bg: #a05555;
}
/* Auto-theme detection */
@media (prefers-color-scheme: dark) {
    body {
        background-color: var(--bg);
        color: var(--text);
    }
}


/* ========== BASE LAYOUT ========== */
/* Resets default spacing, applies global font and theme-aware background. Centers the app using flexbox inside a full-height container. */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    transition: background 0.3s, color 0.3s;
}

:focus {
    outline: 2px solid transparent;
    outline-offset: 4px;
}

body {
    font-family: 'Segoe UI', sans-serif;
    background-color: var(--bg);
    color: var(--text);
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}


/* ========== APP WRAPPER ========== */
/* Container for the whole UI. Styled like a card with shadows and padding. Adjusts width based on user-selected screen mode. */
.app {
    background: var(--card);
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
}

.app.desktop {
    width: 100%;
    max-width: 90%;
}

.app.tablet {
    width: 100%;
    max-width: 600px;
}

.app.mobile {
    width: 100%;
    max-width: 100%;
    height: auto;
}


/* ========== HEADER SECTION ========== */
/* Includes title, device selector, and theme toggle. Uses flex layout with spacing to separate elements. */
.top-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.actions {
    display: flex;
    align-items: center;
}

#deviceSelector {
    padding: 6px;
    font-size: 14px;
    margin-right: 10px;
    border-radius: 6px;
    border: 1px solid #ccc;
    cursor: pointer;
}

#themeToggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
}


/* ========== INPUT CONTROLS ========== */
/* Row layout for task input field and add button. Rounded corners and accent-colored button on hover. */
.todo-input {
    display: flex;
    margin-bottom: 1rem;
}

.todo-input input {
    flex: 1;
    padding: 10px;
    border: 2px solid #ddd;
    border-radius: 6px 0 0 6px;
    font-size: 16px;
}

.todo-input button {
    padding: 10px 20px;
    border: none;
    background: var(--accent);
    color: white;
    font-weight: bold;
    border-radius: 0 6px 6px 0;
    cursor: pointer;
}

.todo-input button:hover {
    background-color: var(--hover-accent);
}


/* ========== FILTER BUTTONS ========== */
/* Horizontal layout for All, Pending, Completed, Cancelled filters. Highlighted state uses accent color for active filter. */
.filters {
    margin: 1rem 0;
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
}

.filters button {
    padding: 6px 10px;
    border: none;
    border-radius: 6px;
    background-color: #ccc;
    cursor: pointer;
    transition: background 0.2s ease;
}

.filters button:hover {
    background-color: var(--accent);
    color: white;
}

.filters button.active {
    background-color: var(--accent);
    color: white;
}


/* ========== TASK LIST STYLING ========== */
/* Renders tasks as vertical cards with optional status styles. Adds hover scale effect and strikethrough for completed/cancelled tasks. */
ul {
    list-style: none;
    max-height: 300px;
    overflow-y: auto;
}

li {
    background: var(--card);
    margin: 8px 0;
    padding: 10px;
    border-radius: 6px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    border-left: 5px solid var(--accent);
    transition: transform 0.2s ease-in-out;
}

li:hover {
    transform: scale(1.02);
}

li.completed {
    background-color: var(--completed);
    text-decoration: line-through;
}

li.cancelled {
    background-color: var(--cancelled);
    text-decoration: line-through;
}

.task-meta {
    font-size: 12px;
    color: gray;
    margin-top: 4px;
}


/* ========== TASK ACTION BUTTONS ========== */
/* Buttons to mark tasks complete, cancel, or delete. Includes hover styles and visual feedback (scaling, shadows). */
li .btn-group {
    display: flex;
    gap: 5px;
    margin-top: 8px;
}

li button {
    margin-top: 6px;
    padding: 4px 8px;
    border: none;
    border-radius: 4px;
    color: white;
    font-size: 14px;
    cursor: pointer;
}

button.complete {
    background: green;
}

button.complete:hover {
    background: #218838;
}

button.cancel {
    background: orange;
}

button.cancel:hover {
    background: #ff9800;
}

button.delete {
    background: var(--btn-bg);
}

button.delete:hover {
    background: var(--hover-btn-bg);
}


/* ========== RESPONSIVE LAYOUTS ========== */
/* Adjust font sizes, stacking direction, and element spacing for mobile and tablet screens using media queries. */
@media (max-width: 480px) {
    .app.mobile {
        font-size: 14px;
        aspect-ratio: 9 / 16;
    }
    .todo-input {
        flex-direction: column;
        gap: 10px;
    }
    .todo-input input {
        width: 100%;
        border-radius: 6px;
    }
    .todo-input button {
        width: 100%;
        border-radius: 6px;
    }
    li {
        font-size: 14px;
        flex-direction: column;
        gap: 8px;
        width: 100%;
    }
    .filters {
        flex-direction: column;
        align-items: stretch;
    }
    .top-bar {
        flex-direction: column-reverse;
        align-items: stretch;
        gap: 8px;
        margin-bottom: 1rem;
    }
    .actions {
        justify-content: flex-end;
        width: 100%;
        gap: 10px;
    }
}

@media (min-width: 481px) and (max-width: 768px) {
    .app.tablet {
        font-size: 15px;
        max-width: 600px;
        margin: 0 auto;
        aspect-ratio: 4 / 3;
    }
    .top-bar {
        flex-direction: column-reverse;
        align-items: stretch;
        gap: 10px;
    }
    .actions {
        justify-content: flex-end;
        width: 100%;
        display: flex;
        gap: 10px;
    }
    .filters {
        flex-wrap: wrap;
    }
}

@media (min-width: 769px) {
    .app.desktop {
        font-size: 16px;
    }
}


/* ========== ANIMATIONS ========== */
/* Task enter/exit effects for a smoother user experience. fadeIn used when adding tasks, fadeOut when removing them. */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}
@keyframes fadeOut {
    to {
        opacity: 0;
        transform: translateY(10px);
        height: 0;
        padding: 0;
        margin: 0;
    }
}


/* ========== BUTTON INTERACTION ========== */
/* Adds subtle transform and shadow to action buttons when hovered. Makes them feel click-friendly and responsive. */
li .btn-group button:hover {
    transform: scale(1.1);
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);
}